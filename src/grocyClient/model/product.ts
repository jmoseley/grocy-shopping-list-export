/**
 * grocy REST API
 * Authentication is done via API keys (header *GROCY-API-KEY* or same named query parameter), which you can manage [here](https://demo.grocy.info/manageapikeys).<br>Additionally requests from within the frontend are also valid (via session cookie).
 *
 * The version of the OpenAPI document: 2.6.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from "../api";

export class Product {
  "id"?: number;
  "name"?: string;
  "description"?: string;
  "locationId"?: number;
  "quIdPurchase"?: number;
  "quIdStock"?: number;
  "enableTareWeightHandling"?: number;
  "notCheckStockFulfillmentForRecipes"?: number;
  "productGroupId"?: number;
  "quFactorPurchaseToStock"?: number;
  "tareWeight"?: number;
  /**
   * Can contain multiple barcodes separated by comma
   */
  "barcode"?: string;
  "minStockAmount"?: number;
  "defaultBestBeforeDays"?: number;
  "defaultBestBeforeDaysAfterOpen"?: number;
  "pictureFileName"?: string;
  "allowPartialUnitsInStock"?: boolean;
  "rowCreatedTimestamp"?: Date;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: "id",
      baseName: "id",
      type: "number"
    },
    {
      name: "name",
      baseName: "name",
      type: "string"
    },
    {
      name: "description",
      baseName: "description",
      type: "string"
    },
    {
      name: "locationId",
      baseName: "location_id",
      type: "number"
    },
    {
      name: "quIdPurchase",
      baseName: "qu_id_purchase",
      type: "number"
    },
    {
      name: "quIdStock",
      baseName: "qu_id_stock",
      type: "number"
    },
    {
      name: "enableTareWeightHandling",
      baseName: "enable_tare_weight_handling",
      type: "number"
    },
    {
      name: "notCheckStockFulfillmentForRecipes",
      baseName: "not_check_stock_fulfillment_for_recipes",
      type: "number"
    },
    {
      name: "productGroupId",
      baseName: "product_group_id",
      type: "number"
    },
    {
      name: "quFactorPurchaseToStock",
      baseName: "qu_factor_purchase_to_stock",
      type: "number"
    },
    {
      name: "tareWeight",
      baseName: "tare_weight",
      type: "number"
    },
    {
      name: "barcode",
      baseName: "barcode",
      type: "string"
    },
    {
      name: "minStockAmount",
      baseName: "min_stock_amount",
      type: "number"
    },
    {
      name: "defaultBestBeforeDays",
      baseName: "default_best_before_days",
      type: "number"
    },
    {
      name: "defaultBestBeforeDaysAfterOpen",
      baseName: "default_best_before_days_after_open",
      type: "number"
    },
    {
      name: "pictureFileName",
      baseName: "picture_file_name",
      type: "string"
    },
    {
      name: "allowPartialUnitsInStock",
      baseName: "allow_partial_units_in_stock",
      type: "boolean"
    },
    {
      name: "rowCreatedTimestamp",
      baseName: "row_created_timestamp",
      type: "Date"
    }
  ];

  static getAttributeTypeMap() {
    return Product.attributeTypeMap;
  }
}
