/**
 * grocy REST API
 * Authentication is done via API keys (header *GROCY-API-KEY* or same named query parameter), which you can manage [here](https://demo.grocy.info/manageapikeys).<br>Additionally requests from within the frontend are also valid (via session cookie).
 *
 * The version of the OpenAPI document: 2.6.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from "../api";

export class Chore {
  "id"?: number;
  "name"?: string;
  "description"?: string;
  "periodType"?: Chore.PeriodTypeEnum;
  "periodConfig"?: string;
  "periodDays"?: number;
  "trackDateOnly"?: boolean;
  "rollover"?: boolean;
  "assignmentType"?: Chore.AssignmentTypeEnum;
  "assignmentConfig"?: string;
  "nextExecutionAssignedToUserId"?: number;
  "rowCreatedTimestamp"?: Date;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: "id",
      baseName: "id",
      type: "number"
    },
    {
      name: "name",
      baseName: "name",
      type: "string"
    },
    {
      name: "description",
      baseName: "description",
      type: "string"
    },
    {
      name: "periodType",
      baseName: "period_type",
      type: "Chore.PeriodTypeEnum"
    },
    {
      name: "periodConfig",
      baseName: "period_config",
      type: "string"
    },
    {
      name: "periodDays",
      baseName: "period_days",
      type: "number"
    },
    {
      name: "trackDateOnly",
      baseName: "track_date_only",
      type: "boolean"
    },
    {
      name: "rollover",
      baseName: "rollover",
      type: "boolean"
    },
    {
      name: "assignmentType",
      baseName: "assignment_type",
      type: "Chore.AssignmentTypeEnum"
    },
    {
      name: "assignmentConfig",
      baseName: "assignment_config",
      type: "string"
    },
    {
      name: "nextExecutionAssignedToUserId",
      baseName: "next_execution_assigned_to_user_id",
      type: "number"
    },
    {
      name: "rowCreatedTimestamp",
      baseName: "row_created_timestamp",
      type: "Date"
    }
  ];

  static getAttributeTypeMap() {
    return Chore.attributeTypeMap;
  }
}

export namespace Chore {
  export enum PeriodTypeEnum {
    Manually = <any>"manually",
    DynamicRegular = <any>"dynamic-regular",
    Daily = <any>"daily",
    Weekly = <any>"weekly",
    Monthly = <any>"monthly"
  }
  export enum AssignmentTypeEnum {
    NoAssignment = <any>"no-assignment",
    WhoLeastDidFirst = <any>"who-least-did-first",
    Random = <any>"random",
    InAlphabeticalOrder = <any>"in-alphabetical-order"
  }
}
